<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="chartMapper">

	<resultMap type="chart" id="chartResultSet">
		<result column="VISIT_DATE" property="visitDate" />
		<result column="VISIT_COUNT" property="visitCount" />
		<result column="SCENT" property="scent" />
		<result column="SALE_COUNT" property="saleCount" />
		<result column="STOCK" property="stock" />
		<result column="PRODUCT_NAME" property="productName" />
	</resultMap>
	
	<resultMap type="orderDetail" id="orderDetailResultSet">
		<result column="ORDER_DATE" property="orderDate" />
		<result column="TOTAL_PRICE" property="totalPrice" />
	</resultMap>
	
	

	<select id="totalMember"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE STATUS = 'Y'
	</select>
	
	<select id="totalSales"
			resultType="_int">
		SELECT SUM(TOTAL_PRICE)
		  FROM ORDER_DETAIL
		 WHERE REFUND_DATE IS NULL
	</select>
	
	
	<select id="dailySales"
			resultType="_int">
		SELECT COUNT(*)
		  FROM ORDER_DETAIL
		 WHERE TRUNC(ORDER_DATE) = TRUNC(SYSDATE)
		   AND PAY_CODE IS NOT NULL
	</select>
	
	<select id="weekAccess"
			resultMap="chartResultSet">
		WITH date_range AS (
	    SELECT TRUNC(SYSDATE) - 6 + LEVEL - 1 AS VISIT_DATE
	    FROM DUAL
	    CONNECT BY LEVEL &lt;= 7
	)
	SELECT d.VISIT_DATE, NVL(COUNT(vc.VISIT_DATE), 0) AS VISIT_COUNT
	  FROM date_range d
	  LEFT JOIN VISIT_COUNT vc
	    ON d.VISIT_DATE = TRUNC(vc.VISIT_DATE)
	 GROUP BY d.VISIT_DATE
	 ORDER BY d.VISIT_DATE
	</select>
	
	
	<select id="weekSales"
			resultMap="orderDetailResultSet">
		WITH date_range AS (
	    SELECT TRUNC(SYSDATE) - 6 + LEVEL - 1 AS ORDER_DATE
	    FROM DUAL
	    CONNECT BY LEVEL &lt;= 7
	)
	SELECT d.ORDER_DATE, NVL(SUM(od.TOTAL_PRICE), 0) AS TOTAL_PRICE
	  FROM date_range d
	  LEFT JOIN ORDER_DETAIL od
	    ON d.ORDER_DATE = TRUNC(od.ORDER_DATE) AND od.REFUND_DATE IS NULL
	 GROUP BY d.ORDER_DATE
	 ORDER BY d.ORDER_DATE
	</select>
	
 	<select id="scentSale"
 			parameterType="String"
			resultMap="chartResultSet">
			
		<choose>

			<when test = "#{note} == 'TOP'">
			
			SELECT TOP_NOTE AS SCENT, TOTAL_SALES AS SALE_COUNT
			FROM (
			    SELECT TOP_NOTE, SUM(QUANTITY) AS TOTAL_SALES
			    FROM product p
			    JOIN order_product op ON p.PRODUCT_NO = op.PRODUCT_NO
			    GROUP BY TOP_NOTE
			    ORDER BY TOTAL_SALES DESC
			)
			WHERE ROWNUM &lt;= 5
			
			</when>
			
			<when test = "#{note} == 'MIDDLE'">
			
			SELECT MIDDLE_NOTE AS SCENT, TOTAL_SALES AS SALE_COUNT
			FROM (
			    SELECT MIDDLE_NOTE, SUM(QUANTITY) AS TOTAL_SALES
			    FROM product p
			    JOIN order_product op ON p.PRODUCT_NO = op.PRODUCT_NO
			    GROUP BY MIDDLE_NOTE
			    ORDER BY TOTAL_SALES DESC
			)
			WHERE ROWNUM &lt;= 5
			
			</when>
			
			<otherwise>
			 
			SELECT BASE_NOTE AS SCENT, TOTAL_SALES AS SALE_COUNT
			FROM (
			    SELECT BASE_NOTE, SUM(QUANTITY) AS TOTAL_SALES
			    FROM product p
			    JOIN order_product op ON p.PRODUCT_NO = op.PRODUCT_NO
			    GROUP BY BASE_NOTE
			    ORDER BY TOTAL_SALES DESC
			)
			WHERE ROWNUM &lt;= 5
			
			</otherwise>
			
		</choose>

	</select>
	
	<select id="productStock"
		resultMap="chartResultSet">
		SELECT PRODUCT_NAME AS "PRODUCT_NAME", PRODUCT_STOCK AS "STOCK"
			FROM (
			  SELECT PRODUCT_NAME, PRODUCT_STOCK
			  FROM PRODUCT
			  ORDER BY PRODUCT_STOCK ASC
			)
			WHERE ROWNUM &lt;= 5

	</select>
	
	<select id="monthRefundClass"
		resultType="_int">
			SELECT COUNT(STATUS)
		  FROM CLASS_REGIST
		 WHERE STATUS = 'N'
             AND TO_CHAR(REGIST_CANCEL_DATE, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM')
		
	</select>
	
	<select id="monthRefundProduct"
	resultType="_int">
		SELECT COUNT(OP.REFUND_REQUEST)
		FROM ORDER_PRODUCT OP
		JOIN ORDER_DETAIL OD ON OP.ORDER_NO = OD.ORDER_NO
		WHERE OP.REFUND_REQUEST IS NOT NULL
		  AND TO_CHAR(OD.ORDER_DATE, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM')
	</select>
	
	
	
</mapper>
