<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="productMapper">
	
	<!-- EVENT 테이블의 조회 결과를 자바 Event VO 타입으로 뽑아주는 resultMap -->
	<resultMap type="product" id="productResultSet">
		<result column="PRODUCT_NO" property="productNo" />
		<result column="PRODUCT_NAME" property="productName" />
		<result column="PRODUCT_EXPLAIN" property="productExplain" />
		<result column="PRODUCT_PRICE" property="productPrice" />
		<result column="PRODUCT_STOCK" property="productStock" />
		<result column="REGIST_DATE" property="registDate" />
		<result column="CATEGORY" property="category" />
		<result column="GENDER" property="gender" />
		<result column="TOP_NOTE" property="topNote" />
		<result column="MIDDLE_NOTE" property="middleNote" />
		<result column="BASE_NOTE" property="baseNote" />
		<result column="PRODUCT_STATUS" property="productStatus" />
		<result column="DISCOUNT" property="discount" />
	</resultMap>
	
	<resultMap type="productImg" id="productImgResultSet">
		<result column="PRODUCT_IMG_NO" property="productImgNo" />
		<result column="PRODUCT_IMG_PATH" property="productImgPath" />
		<result column="PRODUCT_IMG_ORIGIN" property="productImgOrigin" />
		<result column="PRODUCT_IMG_CHANGE" property="productImgChange" />
		<result column="IMG_TYPE" property="imgType" />
		<result column="PRODUCT_NO" property="productNo" />
	</resultMap>
	
	<resultMap type="MemCoupon" id="MemCouponResultSet">
		<result column="REGIST_DATE" property="registDate" />
		<result column="STATUS" property="status" />
		<result column="MEM_NO" property="memNo" />
		<result column="COUPON_NO" property="couponNo" />
	</resultMap>
	
	<resultMap type="Coupon" id="CouponResultSet">
		<result column="COUPON_NO" property="coupon_no" />
		<result column="COUPON_NAME" property="coupon_name" />
	</resultMap>
	<!--  주문테이블  -->
		<resultMap id="OrderDetailResultSet"
		type="OrderDetail">
		<result column="ORDER_NO" property="orderNo" />
		<result column="PAY_CODE" property="payCode" />
		<result column="TOTAL_PRICE" property="totalPrice" />
		<result column="ORDER_WANT" property="orderWant" />
		<result column="DELIVERY_STATUS" property="deliveryStatus" />
		<result column="ORDER_DATE" property="orderDate" />
		<result column="REFUND_DATE" property="refundDate" />
		<result column="MEM_NO" property="memNo" />
		<result column="ADDRESS_NO" property="addressNo" />
		<result column="ADDRESS" property="address" />
		<result column="PHONE" property="phone" />
	</resultMap>
	<!--  장바구니 테이블  -->
	<resultMap type="Cart" id="CartResultSet">
		<result column="CART_NO" property="cartNo" />
		<result column="PRICE" property="price" />
		<result column="QUANTITY" property="quantity" />
		<result column="MEM_NO" property="memNo" />
		<result column="PRODUCT_NO" property="productNo" />
	</resultMap>
	<!--  주문상품(오더지) 테이블 -->
		<resultMap type="OrderProduct" id="OrderProductResultSet">
		<result column="OD_ID" property="odId" />
		<result column="QUANTITY" property="quantity" />
		<result column="PRICE" property="price" />
		<result column="ORDER_NO" property="orderNo" />
		<result column="PRODUCT_NO" property="productNo" />
	</resultMap>
	<!--  상품리뷰  테이블 -->
			<resultMap type="ProductReview" id="ProductReviewResultSet">
		<result column="REVIEW_NO" property="reviewNo" />
		<result column="REVIEW_CONTENT" property="reviewContent" />
		<result column="REVIEW_IMG" property="reviewImgPath" />
		<result column="REVIEW_DATE" property="reviewDate" />
		<result column="REVIEW_RATING" property="reviewRating" />
		<result column="REVIEW_STATUS" property="reviewStatus" />
		<result column="OD_ID" property="odId" />
		<result column="MEM_NO" property="memNo" />
		<result column="PRODUCT_NO" property="productNo" />
			</resultMap>
				<!--  찜 테이블 -->
		<resultMap type="Favorites" id="FavoritesResultSet">
		<result column="MEM_NO" property="memNo" />
		<result column="PRODUCT_NO" property="productNo" />
	   </resultMap>
	
	
	<!--  상품조회 카운트 숫자 구하는 쿼리문 -->
	<select id="selectListCount"
			resultType="_int">
		SELECT COUNT(*)
		  FROM PRODUCT
		 WHERE PRODUCT_STATUS = 'Y'
	</select>
	
	<!-- 상품조회 기본목록을 구하는 쿼리문(등록일순) -->
	<select id="selectList"
			resultMap="productResultSet">
		SELECT * 
		  FROM PRODUCT
		 WHERE PRODUCT_STATUS = 'Y' 
		 ORDER BY PRODUCT_NO DESC
	</select>
		<!-- 상품조회 이미지 구하는 쿼리문 -->
	<select id="selectImgList"
			resultMap="productImgResultSet">
		SELECT * 
		  FROM PRODUCT_IMG 
		 WHERE IMG_TYPE = '1' 
		 ORDER BY PRODUCT_NO DESC
	</select>
			<!-- 상품상세조회 상품 정보 구하는 쿼리문 -->
	<select id="selectProduct"
		parameterType="_int"
			resultMap="productResultSet">
		SELECT * 
		  FROM PRODUCT 
		 WHERE PRODUCT_NO = #{pno}
	</select>
		<!-- 상품상세조회  상품 이미지 구하는 쿼리문 -->
	<select id="selectProductImgList"
		parameterType="_int"
			resultMap="productImgResultSet">
		SELECT * 
		  FROM PRODUCT_IMG 
		 WHERE PRODUCT_NO = #{pno} 
		  AND IMG_TYPE = '2' 
	</select>
	<!--  상품상세조회 상품 이미지 구하는 쿼리문(썸네일) -->
		<select id="selectProductImg"
		parameterType="_int"
		resultMap="productImgResultSet">
		SELECT * 
		  FROM PRODUCT_IMG 
		 WHERE PRODUCT_NO = #{pno} 
		  AND IMG_TYPE = '1' 
	</select>
	<!--  회원번호를 통해 발급 받은 쿠폰 긁어가기 -->
 	 <select id="searchCoupon"
		parameterType="_int"
		resultMap="MemCouponResultSet">
		SELECT * 
		FROM MEM_COUPON 
		WHERE MEM_NO = #{mno} 
		AND STATUS = 'Y' 
		AND ADD_MONTHS(REGIST_DATE, 1) > SYSDATE
		</select>
			<!--  쿠폰  이름 긁어가기 -->
 	 <select id="searchCouponName"
 	 	parameterType="_int"
		resultMap="CouponResultSet">
		SELECT * 
		FROM COUPON 
		WHERE COUPON_NO = #{cno} 
		</select>
		<!--  주문 완료시 테이블에 정보넣자  -->
 	  		<insert id="orderComplete"
			parameterType="OrderDetail">
		INSERT INTO ORDER_DETAIL(ORDER_NO
		                , PAY_CODE
		                , TOTAL_PRICE
		                , ORDER_WANT
		                , DELIVERY_STATUS
		                , ORDER_DATE
		                , REFUND_DATE
		                , MEM_NO
		                , ADDRESS_NO
		                , ADDRESS
		                , PHONE) 
		           VALUES(SEQ_ORDER_NO.NEXTVAL
		                , #{payCode}
		                , #{totalPrice}
		                , #{orderWant}
		                , 'N'
		                , SYSDATE
		                , SYSDATE+3
		                , #{memNo}
		                , #{addressNo}
		                , #{address}
		                , #{phone})   
	</insert>
	<!-- 주문완료 후 고객에게 보여주기 -->
 	 	 <select id="orderview"
 	 	parameterType="String"
 	 	resultMap="OrderDetailResultSet">
		SELECT * 
		FROM ORDER_DETAIL 
		WHERE PAY_CODE = #{merchant_uid}  
		</select>
 	 	<!--  카트에 물건 넣기  -->
 	  		<insert id="cartAdd"
			parameterType="Cart">
		INSERT INTO CART(CART_NO
		                , PRICE
		                , QUANTITY
		                , MEM_NO
		                , PRODUCT_NO)
		           VALUES(SEQ_CART_NO.NEXTVAL
		                , #{price}
		                , #{quantity}
		                , #{memNo}
		                , #{productNo})  
	</insert>
			<!-- 장바구니 페이지에 보여줄 장바구니 리스트 -->
	<select id="selectCartList"
		parameterType="_int"
			resultMap="CartResultSet">
		SELECT * 
		  FROM CART 
		 WHERE MEM_NO = #{mno} 
	</select>
	<!-- 카트에 담긴 선택 상품 삭제 -->
		<delete id="cartdelete" parameterType="_int">
		DELETE  
		FROM CART 
		WHERE CART_NO = #{cno} 
		</delete>
		<!--  카트 번호로 해당 상품 번호 긁어오기용 쿼리문 -->
 	 <select id="cartSelect"
 	 	parameterType="_int"
		resultMap="CartResultSet">
		SELECT * 
		 FROM CART 
		WHERE CART_NO = #{cno}
		</select>
	<!-- 장바구니 수량 업데이트  -->
		<update id="cartUpdate"
			parameterType="Cart">
		UPDATE CART
		   SET PRICE = #{price}
		     , QUANTITY = #{quantity}
		 WHERE CART_NO = #{cartNo} 
	</update>
	 	<!--  주문상품 테이블에 주문넣기  -->
 	  		<insert id="insertOrderProduct"
			parameterType="OrderProduct">
		INSERT INTO ORDER_PRODUCT(OD_ID
		                , QUANTITY
		                , PRICE
		                , ORDER_NO
		                , PRODUCT_NO) 
		           VALUES(SEQ_OD_ID.NEXTVAL
		                , #{quantity}
		                , #{price}
		                , #{orderNo}
		                , #{productNo})  
	</insert>
		<!-- 구매수량 만큼 재고량 업데이트  -->
		<update id="minusQuantity"
			parameterType="product">
		UPDATE PRODUCT 
		   SET PRODUCT_STOCK = #{productStock} 
		 WHERE PRODUCT_NO = #{productNo}  
	</update>
		<!-- 장바구니 결제 완료 하면 담겨있는 상품들 삭제 -->
		<delete id="completeCart" parameterType="_int">
		DELETE  
		FROM CART 
		WHERE MEM_NO = #{mno} 
		</delete>
		<!--  주문번호로 주문정보 긁어오기 -->
		 <select id="selectOrder"
 	 	parameterType="_int"
		resultMap="OrderDetailResultSet">
		SELECT * 
		 FROM ORDER_DETAIL 
		WHERE ORDER_NO = #{ono} 
		</select>
		<!--  주문번호로 오더지 긁어오기 -->
		<select id="selectOrderProduct"
		parameterType="_int"
			resultMap="OrderProductResultSet">
		SELECT * 
		  FROM ORDER_PRODUCT 
		 WHERE ORDER_NO = #{ono} 
	</select>
		 	<!--  상품 테이블에 상품넣기  -->
 	  		<insert id="insertProduct"
			parameterType="product">
		INSERT INTO PRODUCT(PRODUCT_NO
		                , PRODUCT_NAME
		                , PRODUCT_EXPLAIN
		                , PRODUCT_PRICE
		                , PRODUCT_STOCK
		                , REGIST_DATE
		                , CATEGORY
		                , GENDER
		                , TOP_NOTE
		                , MIDDLE_NOTE
		                , BASE_NOTE
		                , PRODUCT_STATUS
		                , DISCOUNT) 
		           VALUES(SEQ_PRODUCT_NO.NEXTVAL
		                , #{productName}
		                , #{productExplain}
		                , #{productPrice}
		                , #{productStock}
		                , SYSDATE
		                , #{category}
		                , #{gender}
		                , #{topNote}
		                , #{middleNote}
		                , #{baseNote}
		                , 'Y'
		                , #{discount})  
	</insert>
	<!--  상품이미지테이블에 이미지 넣기 썸네일 -->
 	  		<insert id="insertProductImg"
			parameterType="productImg">
		INSERT INTO PRODUCT_IMG(PRODUCT_IMG_NO
		                , PRODUCT_IMG_PATH
		                , PRODUCT_IMG_ORIGIN
		                , PRODUCT_IMG_CHANGE
		                , IMG_TYPE
		                , PRODUCT_NO
		                , STATUS) 
		           VALUES(SEQ_IMG_NO.NEXTVAL
		                , #{productImgPath}
		                , #{productImgOrigin}
		                , #{productImgChange}
		                , 1
		                , #{productNo}
		                , 'Y')  
	</insert>
		<!--  상품이미지테이블에 이미지 넣기 썸네일 아닌 -->
 	  		<insert id="insertProductImg2"
			parameterType="productImg">
		INSERT INTO PRODUCT_IMG(PRODUCT_IMG_NO
		                , PRODUCT_IMG_PATH
		                , PRODUCT_IMG_ORIGIN
		                , PRODUCT_IMG_CHANGE
		                , IMG_TYPE
		                , PRODUCT_NO
		                , STATUS) 
		           VALUES(SEQ_IMG_NO.NEXTVAL
		                , #{productImgPath}
		                , #{productImgOrigin}
		                , #{productImgChange}
		                , 2
		                , #{productNo}
		                , 'Y')  
	</insert>
	<!-- 상품명을 이용해서 상품번호 가져오기 -->
		<select id="selectProductNo"
		parameterType="String"
			resultMap="productResultSet">
		SELECT * 
		  FROM PRODUCT
		 WHERE PRODUCT_NAME = #{productName} 
	</select>
			<!--  회원번호로 오더지 긁어오기 -->
		<select id="selectOrderDetail"
		parameterType="_int"
			resultMap="OrderDetailResultSet">
		SELECT * 
		  FROM ORDER_DETAIL 
		 WHERE MEM_NO = #{mno} 
	</select>
		<!-- 주문번호을 이용해서 오더지 가져오기 -->
		<select id="selectOrderProduct1"
		parameterType="_int"
			resultMap="OrderProductResultSet">
		SELECT * 
		  FROM ORDER_PRODUCT 
		 WHERE ORDER_NO = #{ono}  
	</select>
			<!--  상품리뷰테이블에 리뷰 넣기 -->
 	  		<insert id="insertProductReview"
			parameterType="ProductReview">
		INSERT INTO PRODUCT_REVIEW(REVIEW_NO
		                , REVIEW_CONTENT
		                , REVIEW_IMG
		                , REVIEW_DATE
		                , REVIEW_RATING
		                , REVIEW_STATUS
		                , OD_ID
		                , MEM_NO
		                , PRODUCT_NO) 
		           VALUES(SEQ_REVIEW_NO.NEXTVAL
		                , #{reviewContent}
		                , #{reviewImgPath}
		                , SYSDATE
		                , #{reviewRating}
		                , 'Y'
		                , #{odId}
		                , #{memNo}
		                , #{productNo})   
	   </insert>
	   <!--  상품번호를 이용해 상품리뷰 리스트 긁어가기 -->
			<!-- 주문번호을 이용해서 오더지 가져오기 -->
		<select id="selectProductReviewList"
		parameterType="_int"
			resultMap="ProductReviewResultSet">
		SELECT * 
		  FROM PRODUCT_REVIEW  
		 WHERE PRODUCT_NO = #{pno} 
		 AND REVIEW_STATUS = 'Y'    
	</select>
				<!--  찜테이블에 찜 추가 -->
 	  		<insert id="favoriteAdd"
			parameterType="Favorites">
		INSERT INTO FAVORITES(MEM_NO
		                , PRODUCT_NO)  
		           VALUES(#{memNo}
		                , #{productNo})    
	   </insert>
	   <!--  찜테이블에 있는지 확인  -->
		<select id="selectFavorites"
		parameterType="Favorites"
			resultMap="FavoritesResultSet">
		SELECT * 
		  FROM FAVORITES 
		 WHERE MEM_NO = #{memNo} 
		 AND PRODUCT_NO = #{productNo}     
	    </select>
	<!--  찜 삭제  -->
		<delete id="favoriteDel" parameterType="Favorites">
	    DELETE FROM FAVORITES  
		WHERE PRODUCT_NO = #{productNo} 
		AND MEM_NO = #{memNo}  
		</delete>
		<!-- 상품조회 검색을 통해 구하는 쿼리문(등록일순) -->
	<select id="searchselectList"
			resultMap="productResultSet">
		SELECT * 
		  FROM PRODUCT 
		 WHERE PRODUCT_NAME LIKE '%'||#{text}||'%' 
		 OR TOP_NOTE LIKE '%'||#{text}||'%'
		 OR MIDDLE_NOTE LIKE '%'||#{text}||'%' 
		 OR BASE_NOTE LIKE '%'||#{text}||'%'
		 OR GENDER LIKE  '%'||#{text}||'%' 
		 AND PRODUCT_STATUS = 'Y' 
		 ORDER BY PRODUCT_NO DESC 
	</select>
			<!-- 탑노트 리스트 조회 -->
	<select id="selectTopNoteList"
			resultMap="productResultSet">
	SELECT DISTINCT TOP_NOTE 
	FROM PRODUCT 
	</select>
				<!-- 미들노트 리스트 조회 -->
	<select id="selectMiddleNoteList"
			resultMap="productResultSet">
	SELECT DISTINCT MIDDLE_NOTE 
	FROM PRODUCT 
	</select>
				<!-- 베이스노트 리스트 조회 -->
	<select id="selectBaseNoteList"
			resultMap="productResultSet">
	SELECT DISTINCT BASE_NOTE 
	FROM PRODUCT 
	</select>
		<!-- 상품조회 기본목록을 구하는 쿼리문(가격낮은순) -->
	<select id="selectAscList"
			resultMap="productResultSet">
		   SELECT * 
		  FROM PRODUCT
		 WHERE PRODUCT_STATUS = 'Y' 
		 ORDER BY (PRODUCT_PRICE *(100-DISCOUNT) /100) ASC
	</select>
		<!-- 상품조회 기본목록을 구하는 쿼리문(가격높은순) -->
	<select id="selectDescList"
			resultMap="productResultSet">
		   SELECT * 
		  FROM PRODUCT
		 WHERE PRODUCT_STATUS = 'Y' 
		 ORDER BY (PRODUCT_PRICE *(100-DISCOUNT) /100) DESC 
	</select>
			<!-- 상품조회 기본목록을 구하는 쿼리문(판매순) -->
	<select id="selectPopList"
			resultMap="productResultSet">
         SELECT * 
		  FROM PRODUCT
		 WHERE PRODUCT_STATUS = 'Y' 
		 ORDER BY PRODUCT_STOCK ASC
	</select>
				<!-- 상품조회  관리자용 판매상품 리스트 긁어가기) -->
	<select id="saleProductList"
			resultMap="productResultSet">
  		SELECT * 
		  FROM PRODUCT 
		 WHERE PRODUCT_STATUS = 'Y' 
		 ORDER BY PRODUCT_NO DESC 
	</select>
	<!--  관리자 상품 정보 변경 -->
		<update id="updatepro"
			parameterType="product">
		UPDATE PRODUCT  
		 	 SET PRODUCT_NAME = #{productName}, 
		         PRODUCT_EXPLAIN = #{productExplain}, 
		         PRODUCT_PRICE = #{productPrice}, 
		         PRODUCT_STOCK = #{productStock}, 
		         REGIST_DATE = SYSDATE,
		         CATEGORY = #{category}, 
		         GENDER = #{gender}, 
		         TOP_NOTE = #{topNote}, 
		         MIDDLE_NOTE = #{middleNote}, 
		         BASE_NOTE = #{baseNote}, 
		         PRODUCT_STATUS = #{productStatus}, 
		         DISCOUNT = #{discount} 
				 WHERE PRODUCT_NO = #{productNo} 
	</update>
		<!--  관리자 상품 정보 변경 이미지(썸네일) -->
		<update id="updateProductImg"
			parameterType="productImg">
		UPDATE PRODUCT_IMG  
		 	 SET IMG_NAME = #{productImgPath} 
			WHERE PRODUCT_NO = #{productNo} 
			AND IMG_TYPE = '1' 
	</update>
			<!--  관리자 상품 정보 변경 이미지 보조사진-->
		<update id="updateProductImg2"
			parameterType="productImg">
		UPDATE PRODUCT_IMG  
		 	 SET IMG_NAME = #{productImgPath} 
			WHERE IMG_No = #{productImgNo}  
    	</update>
    	<!--  관리자 배송시스템에서  배송 보내주면 배송상태 바꾸는 쿼리 -->
			<update id="orderDelivery"
			parameterType="_int">
		UPDATE ORDER_DETAIL   
		 	 SET DELIVERY_STATUS = 'N' 
			WHERE ORDER_NO = #{orderNo}  
    	</update>
	
	<select id="getProductThumbnail" resultMap="productImgResultSet">
	    SELECT PRODUCT_IMG_PATH
	      FROM (
	          SELECT PRODUCT_IMG_PATH,
	                 ROW_NUMBER() OVER (ORDER BY DBMS_RANDOM.VALUE) AS RNUM
	          FROM PRODUCT_IMG
	          JOIN PRODUCT USING (PRODUCT_NO)
	          WHERE IMG_TYPE = '1'
	      )
	      WHERE RNUM &lt;= 12
	</select>
	
	<!--  환불 요청 쿼리문  -->
		<update id="wantRefund"
			parameterType="_int">
		UPDATE ORDER_PRODUCT    
		 	 SET REFUND_REQUEST = '환불심사중'   
			WHERE OD_ID = #{odId}   
    	</update>
    	  	<!--  환불 요청 들어온 것 승인해주는 쿼리문  -->
		<update id="doRefund"
			parameterType="_int">
		UPDATE ORDER_PRODUCT    
		 	 SET REFUND_REQUEST = '환불승인완료'   
			WHERE OD_ID = #{odId}   
    	</update>
	<!--  이용객 마이페이지에서 찜한 목록 보기 -->
		<select id="myFavoriteList" 
		parameterType="_int"
			resultMap="FavoritesResultSet">
  		SELECT * 
		  FROM FAVORITES  
		 WHERE MEM_NO = #{mno}  
		 ORDER BY PRODUCT_NO DESC 
	  </select>
	<!--  노트를 가지고 상품 정보 가져가기(검색) -->
		<!-- 상품명을 이용해서 상품번호 가져오기 -->
		<select id="searchNote"
		parameterType="String"
			resultMap="productResultSet">
		SELECT * 
		  FROM PRODUCT
		 WHERE TOP_NOTE = #{array} 
		 OR MIDDLE_NOTE = #{array} 
		 OR BASE_NOTE = #{array}  
	</select>
	<!--  나의 쿠폰 리스트 긁어오기 -->
		<select id="myCoupon"
		parameterType="_int"
			resultMap="MemCouponResultSet">
		SELECT * 
		  FROM MEM_COUPON 
		 WHERE MEM_NO = #{mno} 
		 AND STATUS = 'Y'  
	</select>
		<!--  나의 쿠폰 리스트에서 이름 가져오기-->
		<select id="CouponName"
		parameterType="_int"
			resultMap="CouponResultSet">
		SELECT * 
		  FROM COUPON 
		 WHERE COUPON_NO = #{CouponNo}  
	</select>
	<!--  나의 쿠폰 리스트에서 이름 가져오기-->
	<delete id="deleteFavorite"
		parameterType="Favorites">
		DELETE 
		  FROM FAVORITES
		 WHERE MEM_NO = #{memNo}
		   AND PRODUCT_NO = #{productNo}
	</delete>

	<!--  찜 갯수 구하기 -->
			<!--  나의 쿠폰 리스트에서 이름 가져오기-->
		<select id="countFavorite"
		parameterType="_int"
			resultType="String">
	     SELECT COUNT(*) 
         FROM FAVORITES 
         WHERE PRODUCT_NO = #{pno} 
	</select>
	<!--  리뷰리스트 가져오기 -->
			<select id="myReview"
		parameterType="_int"
			resultMap="ProductReviewResultSet">
	     SELECT *
         FROM PRODUCT_REVIEW  
         WHERE MEM_NO = #{mno} 
	</select>
			<!-- 상품번호로 리뷰긁어가기-->
		<select id="selectReview"
		parameterType="_int"
			resultMap="ProductReviewResultSet">
		SELECT * 
		  FROM PRODUCT_REVIEW
		 WHERE PRODUCT_NO = #{pno}  
	</select>
</mapper>
